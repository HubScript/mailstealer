--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v91=0;local v92;while true do if (v91==0) then v92=v5(v82,v19);v19=nil;v91=1;end if (v91==1) then return v92;end end else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-(932 -(857 + 74))) -(v32-(569 -(367 + 201)))) + (1 -0))) ;return v84-(v84%(928 -(214 + (1778 -(68 + 997))))) ;end end else local v85=0 + 0 ;local v86;while true do if (v85==(0 + 0)) then v86=(879 -(282 + 595))^(v32-(1638 -(1523 + 114))) ;return (((v31%(v86 + v86))>=v86) and (1271 -(226 + 1044))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -(0 -0) ;local v36;local v37;while true do if (v35==(118 -(32 + 85))) then return (v37 * (251 + 5)) + v36 ;end if (v35==0) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;v35=2 -(1 -0) ;end end end local function v23() local v38=0;local v39;local v40;local v41;local v42;while true do if (v38==(351 -((1039 -(802 + 150)) + (707 -444)))) then return (v42 * (16777396 -(67 + 113))) + (v41 * (48056 + 17480)) + (v40 * (628 -372)) + v39 ;end if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (15 -11) ;v38=1;end end end local function v24() local v43=(0 + 0) -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(0 + 0 + 0)) then v44=v23();v45=v23();v43=998 -(915 + 82) ;end if (v43==(2 -1)) then v46=1 + 0 ;v47=(v20(v45,1 -0 ,1207 -(1069 + 42 + 76) ) * ((4 -2)^((251 -182) -37))) + v44 ;v43=1 + 1 ;end if (2==v43) then v48=v20(v45,21,54 -23 );v49=((v20(v45,(113 -81) + 0 )==(792 -(368 + 423))) and  -(3 -2)) or (19 -(10 + 8)) ;v43=11 -8 ;end if (v43==(445 -((1301 -(261 + 624)) + 26))) then if (v48==(0 -0)) then if (v47==((859 -(814 + 45)) -(1080 -(1020 + 60)))) then return v49 * (0 + 0) ;else local v101=0 -0 ;while true do if (v101==(438 -(145 + 293))) then v48=431 -(44 + 386) ;v46=1486 -((2421 -(630 + 793)) + 488) ;break;end end end elseif (v48==(651 + 1396)) then return ((v47==(0 + 0)) and (v49 * ((773 -(201 + 571))/0))) or (v49 * NaN) ;end return v8(v49,v48-((5324 -3163) -(116 + 1022)) ) * (v46 + (v47/(2^(216 -164)))) ;end end end local function v25(v50) local v51=0 -0 ;local v52;local v53;while true do if (v51==(9 -7)) then v53={};for v93=1 + (0 -0) , #v52 do v53[v93]=v2(v1(v3(v52,v93,v93)));end v51=9 -(1419 -(447 + 966)) ;end if (v51==(1747 -(760 + 987))) then v52=nil;if  not v50 then local v100=1913 -(1789 + (545 -421)) ;while true do if (v100==(766 -((2039 -1294) + 21))) then v50=v23();if (v50==(0 + 0)) then return "";end break;end end end v51=2 -(1 + 0) ;end if ((11 -8)==v51) then return v6(v53);end if (v51==(1 + 0)) then v52=v3(v16,v18,(v18 + v50) -(1 + (1817 -(1703 + 114))) );v18=v18 + v50 ;v51=(1758 -(376 + 325)) -(87 + 968) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54==2) then v59=nil;v60=nil;v54=3;end if (v54==3) then v61=nil;while true do local v95=0;while true do if (v95==(0 + 0)) then if ((0 + 0)~=v55) then else local v102=0 -0 ;while true do if (v102==(1274 -(388 + 886))) then v56={};v57={};v102=1;end if (1~=v102) then else local v106=0 -0 ;while true do if (v106==(0 + 0)) then v58={};v59={v56,v57,nil,v58};v106=1 + 0 ;end if (v106==1) then v102=4 -2 ;break;end end end if (v102==2) then v55=1;break;end end end if (v55==(605 -(268 + 335))) then local v103=290 -(60 + 230) ;local v104;while true do if (v103==(572 -(426 + 146))) then v104=0 + 0 ;while true do local v109=1456 -(282 + 1174) ;while true do if (0~=v109) then else if (v104==0) then local v350=811 -(569 + 242) ;while true do if (v350~=(0 -0)) then else for v440=1 + 0 ,v23() do local v441=1024 -(706 + 318) ;local v442;local v443;local v444;while true do if ((1252 -(721 + 530))==v441) then v444=nil;while true do if (v442==0) then v443=1271 -(945 + 326) ;v444=nil;v442=2 -1 ;end if ((1 + 0)==v442) then while true do if (0~=v443) then else v444=v21();if (v20(v444,701 -(271 + 429) ,1 + 0 )==0) then local v462=1500 -(1408 + 92) ;local v463;local v464;local v465;local v466;while true do if (v462~=2) then else while true do if (v463==(1088 -(461 + 625))) then local v469=1288 -(993 + 295) ;local v470;while true do if (v469==0) then v470=0;while true do if (v470==(0 + 0)) then local v478=0;while true do if (0~=v478) then else if (v20(v465,1172 -(418 + 753) ,1)==(1 + 0)) then v466[2]=v61[v466[2]];end if (v20(v465,2,1 + 1 )==1) then v466[3]=v61[v466[1 + 2 ]];end v478=1 + 0 ;end if (1~=v478) then else v470=1;break;end end end if ((530 -(406 + 123))==v470) then v463=3;break;end end break;end end end if ((1769 -(1749 + 20))==v463) then local v471=0 + 0 ;local v472;while true do if (v471==(1322 -(1249 + 73))) then v472=0;while true do if (v472==0) then v464=v20(v444,1 + 1 ,3);v465=v20(v444,4,1151 -(466 + 679) );v472=1;end if (v472==(2 -1)) then v463=2 -1 ;break;end end break;end end end if (v463==(1901 -(106 + 1794))) then local v473=0 + 0 ;local v474;while true do if (v473==(0 + 0)) then v474=0 -0 ;while true do if (0==v474) then local v479=0 -0 ;while true do if (v479==(115 -(4 + 110))) then v474=1;break;end if (v479==(584 -(57 + 527))) then v466={v22(),v22(),nil,nil};if (v464==(0 + 0)) then local v484=0;while true do if (v484~=(0 -0)) then else v466[8 -5 ]=v22();v466[4]=v22();break;end end elseif (v464==1) then v466[169 -(122 + 44) ]=v23();elseif (v464==(2 -0)) then v466[9 -6 ]=v23() -((2 + 0)^(3 + 13)) ;elseif (v464==(5 -2)) then local v489=0;local v490;local v491;while true do if (v489==(66 -(30 + 35))) then while true do if (0==v490) then v491=0;while true do if (v491==0) then v466[3 + 0 ]=v23() -(2^16) ;v466[1261 -(1043 + 214) ]=v22();break;end end break;end end break;end if (v489~=0) then else v490=0 -0 ;v491=nil;v489=1213 -(323 + 889) ;end end end v479=1;end end end if (1==v474) then v463=2;break;end end break;end end end if (v463==(7 -4)) then if (v20(v465,583 -(361 + 219) ,323 -(53 + 267) )==1) then v466[1 + 3 ]=v61[v466[417 -(15 + 398) ]];end v56[v440]=v466;break;end end break;end if (v462==1) then v465=nil;v466=nil;v462=984 -(18 + 964) ;end if (v462~=0) then else local v467=0;local v468;while true do if (0~=v467) then else v468=0;while true do if (v468~=1) then else v462=3 -2 ;break;end if (v468==(0 + 0)) then v463=0 + 0 ;v464=nil;v468=1;end end break;end end end end end break;end end break;end end break;end if (v441~=(850 -(20 + 830))) then else v442=0;v443=nil;v441=1;end end end for v445=1 + 0 ,v23() do v57[v445-(127 -(116 + 10)) ]=v28();end v350=1 + 0 ;end if (v350==1) then v104=739 -(542 + 196) ;break;end end end if (v104~=1) then else return v59;end break;end end end break;end end end v95=1;end if (v95==1) then if (v55==1) then local v105=0 -0 ;while true do if (v105==0) then local v107=0;while true do if ((1 + 0)~=v107) then else v105=1 + 0 ;break;end if (v107~=0) then else v60=v23();v61={};v107=1;end end end if (v105~=(1 + 1)) then else v55=4 -2 ;break;end if (v105==(2 -1)) then local v108=1551 -(1126 + 425) ;while true do if (v108~=1) then else v105=2;break;end if (v108~=0) then else for v120=1,v60 do local v121=405 -(118 + 287) ;local v122;local v123;local v124;local v125;while true do if (v121==(0 -0)) then v122=0;v123=nil;v121=1122 -(118 + 1003) ;end if (v121~=(5 -3)) then else while true do if (v122~=(377 -(142 + 235))) then else v123=0 -0 ;v124=nil;v122=1;end if (v122==(1 + 0)) then v125=nil;while true do if (v123==(977 -(553 + 424))) then local v457=0;while true do if (v457==(0 -0)) then v124=v21();v125=nil;v457=1;end if (v457~=1) then else v123=1;break;end end end if (1~=v123) then else if (v124==(1 + 0)) then v125=v21()~=(0 + 0) ;elseif (v124==2) then v125=v24();elseif (v124==(2 + 1)) then v125=v25();end v61[v120]=v125;break;end end break;end end break;end if (v121==(1 + 0)) then v124=nil;v125=nil;v121=2 + 0 ;end end end v59[6 -3 ]=v21();v108=1;end end end end end break;end end end break;end if (v54~=1) then else local v90=0;while true do if (v90==(2 -1)) then v54=2;break;end if (v90~=0) then else v57=nil;v58=nil;v90=2 -1 ;end end end if (v54~=(0 + 0)) then else v55=0 -0 ;v56=nil;v54=754 -(239 + 514) ;end end end local function v29(v62,v63,v64) local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...) local v68=v65;local v69=v66;local v70=v67;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=59) then if (v81<=29) then if (v81<=14) then if (v81<=6) then if (v81<=2) then if (v81<=0) then if (v80[2]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==1) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;else v63[v80[3]]=v78[v80[2]];end elseif (v81<=4) then if (v81==3) then v78[v80[2]]=v78[v80[3]]/v80[4] ;elseif (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>5) then local v131=v80[2];v78[v131]=v78[v131](v78[v131 + 1 ]);else local v133=v80[2];local v134={v78[v133](v13(v78,v133 + 1 ,v73))};local v135=0;for v298=v133,v80[4] do local v299=0;while true do if (v299==0) then v135=v135 + 1 ;v78[v298]=v134[v135];break;end end end end elseif (v81<=10) then if (v81<=8) then if (v81==7) then do return;end else v63[v80[3]]=v78[v80[2]];end elseif (v81==9) then v78[v80[2]]();else v64[v80[3]]=v78[v80[2]];end elseif (v81<=12) then if (v81>11) then local v140=v80[2];local v141={v78[v140](v78[v140 + 1 ])};local v142=0;for v300=v140,v80[4] do local v301=0;while true do if (v301==0) then v142=v142 + 1 ;v78[v300]=v141[v142];break;end end end else v78[v80[2]]=v78[v80[3]] * v78[v80[4]] ;end elseif (v81>13) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v80[2]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=21) then if (v81<=17) then if (v81<=15) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81==16) then if (v78[v80[2]]~=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v64[v80[3]];end elseif (v81<=19) then if (v81>18) then for v302=v80[2],v80[3] do v78[v302]=nil;end else v78[v80[2]]=v78[v80[3]];end elseif (v81>20) then local v148=v69[v80[3]];local v149;local v150={};v149=v10({},{__index=function(v304,v305) local v306=v150[v305];return v306[1][v306[2]];end,__newindex=function(v307,v308,v309) local v310=v150[v308];v310[1][v310[2]]=v309;end});for v312=1,v80[4] do v72=v72 + 1 ;local v313=v68[v72];if (v313[1]==18) then v150[v312-1 ]={v78,v313[3]};else v150[v312-1 ]={v63,v313[3]};end v77[ #v77 + 1 ]=v150;end v78[v80[2]]=v29(v148,v149,v64);else v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;end elseif (v81<=25) then if (v81<=23) then if (v81>22) then v78[v80[2]]=v80[3]~=0 ;else local v154=0;local v155;local v156;local v157;local v158;while true do if (v154==1) then v73=(v157 + v155) -1 ;v158=0;v154=2;end if (v154==2) then for v408=v155,v73 do local v409=0;while true do if (v409==0) then v158=v158 + 1 ;v78[v408]=v156[v158];break;end end end break;end if (v154==0) then v155=v80[2];v156,v157=v71(v78[v155](v78[v155 + 1 ]));v154=1;end end end elseif (v81==24) then v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;else v78[v80[2]][v78[v80[3]]]=v78[v80[4]];end elseif (v81<=27) then if (v81==26) then v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;else v78[v80[2]]=v78[v80[3]] * v80[4] ;end elseif (v81>28) then do return v78[v80[2]];end else v78[v80[2]]();end elseif (v81<=44) then if (v81<=36) then if (v81<=32) then if (v81<=30) then local v112=0;local v113;while true do if (v112==0) then v113=v80[2];v78[v113](v78[v113 + 1 ]);break;end end elseif (v81>31) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v164=0;while true do if (v164==0) then v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;break;end end end elseif (v81<=34) then if (v81>33) then local v165=v80[2];v78[v165](v13(v78,v165 + 1 ,v80[3]));else local v166=v80[2];v78[v166]=v78[v166](v13(v78,v166 + 1 ,v80[3]));end elseif (v81>35) then local v168=v80[2];do return v78[v168](v13(v78,v168 + 1 ,v80[3]));end else for v316=v80[2],v80[3] do v78[v316]=nil;end end elseif (v81<=40) then if (v81<=38) then if (v81>37) then local v169=v80[3];local v170=v78[v169];for v318=v169 + 1 ,v80[4] do v170=v170   .. v78[v318] ;end v78[v80[2]]=v170;else local v172=v80[2];local v173=v78[v80[3]];v78[v172 + 1 ]=v173;v78[v172]=v173[v80[4]];end elseif (v81>39) then local v177=v80[2];local v178=v80[4];local v179=v177 + 2 ;local v180={v78[v177](v78[v177 + 1 ],v78[v179])};for v319=1,v178 do v78[v179 + v319 ]=v180[v319];end local v181=v180[1];if v181 then local v356=0;while true do if (v356==0) then v78[v179]=v181;v72=v80[3];break;end end else v72=v72 + 1 ;end else v78[v80[2]][v78[v80[3]]]=v78[v80[4]];end elseif (v81<=42) then if (v81==41) then do return v78[v80[2]]();end else local v184=0;local v185;while true do if (v184==0) then v185=v80[2];do return v78[v185](v13(v78,v185 + 1 ,v80[3]));end break;end end end elseif (v81==43) then local v186=0;local v187;while true do if (v186==0) then v187=v80[2];v78[v187](v13(v78,v187 + 1 ,v73));break;end end else v78[v80[2]]=v78[v80[3]]/v80[4] ;end elseif (v81<=51) then if (v81<=47) then if (v81<=45) then if (v78[v80[2]]~=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>46) then local v190=0;local v191;while true do if (v190==0) then v191=v78[v80[4]];if  not v191 then v72=v72 + 1 ;else v78[v80[2]]=v191;v72=v80[3];end break;end end else local v192=0;local v193;while true do if (v192==0) then v193=v80[2];v78[v193]=v78[v193]();break;end end end elseif (v81<=49) then if (v81==48) then v78[v80[2]]= #v78[v80[3]];else v78[v80[2]]=v29(v69[v80[3]],nil,v64);end elseif (v81>50) then if (v78[v80[2]]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end else local v196=v80[2];local v197={};for v322=1, #v77 do local v323=0;local v324;while true do if (v323==0) then v324=v77[v322];for v427=0, #v324 do local v428=0;local v429;local v430;local v431;while true do if (v428==0) then v429=v324[v427];v430=v429[1];v428=1;end if (1==v428) then v431=v429[2];if ((v430==v78) and (v431>=v196)) then v197[v431]=v430[v431];v429[1]=v197;end break;end end end break;end end end end elseif (v81<=55) then if (v81<=53) then if (v81==52) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]={};end elseif (v81==54) then local v199=0;local v200;while true do if (v199==0) then v200=v80[2];do return v13(v78,v200,v73);end break;end end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=57) then if (v81>56) then local v203=v80[2];v78[v203]=v78[v203]();else v78[v80[2]]=v78[v80[3]] + v80[4] ;end elseif (v81>58) then do return;end else v72=v80[3];end elseif (v81<=89) then if (v81<=74) then if (v81<=66) then if (v81<=62) then if (v81<=60) then local v114=v80[3];local v115=v78[v114];for v119=v114 + 1 ,v80[4] do v115=v115   .. v78[v119] ;end v78[v80[2]]=v115;elseif (v81>61) then v78[v80[2]]=v78[v80[3]][v78[v80[4]]];else local v209=0;local v210;local v211;local v212;while true do if (v209==0) then v210=v80[2];v211=v78[v210];v209=1;end if (v209==1) then v212=v80[3];for v411=1,v212 do v211[v411]=v78[v210 + v411 ];end break;end end end elseif (v81<=64) then if (v81>63) then local v213=v69[v80[3]];local v214;local v215={};v214=v10({},{__index=function(v325,v326) local v327=0;local v328;while true do if (v327==0) then v328=v215[v326];return v328[1][v328[2]];end end end,__newindex=function(v329,v330,v331) local v332=v215[v330];v332[1][v332[2]]=v331;end});for v334=1,v80[4] do v72=v72 + 1 ;local v335=v68[v72];if (v335[1]==18) then v215[v334-1 ]={v78,v335[3]};else v215[v334-1 ]={v63,v335[3]};end v77[ #v77 + 1 ]=v215;end v78[v80[2]]=v29(v213,v214,v64);else local v217=0;local v218;while true do if (v217==0) then v218=v80[2];v78[v218]=v78[v218](v13(v78,v218 + 1 ,v73));break;end end end elseif (v81>65) then v78[v80[2]]=v78[v80[3]] + v80[4] ;elseif (v80[2]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81<=70) then if (v81<=68) then if (v81==67) then v78[v80[2]]=v78[v80[3]][v78[v80[4]]];else v78[v80[2]]=v63[v80[3]];end elseif (v81>69) then local v224=0;local v225;while true do if (0==v224) then v225=v80[2];v78[v225]=v78[v225](v13(v78,v225 + 1 ,v80[3]));break;end end else local v226=0;local v227;while true do if (0==v226) then v227=v80[2];do return v13(v78,v227,v227 + v80[3] );end break;end end end elseif (v81<=72) then if (v81>71) then do return v78[v80[2]]();end elseif (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>73) then v78[v80[2]]=v78[v80[3]];else local v230=v80[2];local v231=v80[4];local v232=v230 + 2 ;local v233={v78[v230](v78[v230 + 1 ],v78[v232])};for v337=1,v231 do v78[v232 + v337 ]=v233[v337];end local v234=v233[1];if v234 then local v361=0;while true do if (0==v361) then v78[v232]=v234;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=81) then if (v81<=77) then if (v81<=75) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==76) then v78[v80[2]]=v64[v80[3]];elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=79) then if (v81==78) then v78[v80[2]]=v80[3]^v78[v80[4]] ;elseif (v80[2]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81>80) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;elseif (v80[2]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=85) then if (v81<=83) then if (v81==82) then v78[v80[2]]=v78[v80[3]] * v80[4] ;else v78[v80[2]][v80[3]]=v80[4];end elseif (v81>84) then local v243=0;local v244;while true do if (v243==0) then v244=v80[2];v78[v244]=v78[v244](v13(v78,v244 + 1 ,v73));break;end end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=87) then if (v81==86) then v78[v80[2]]=v80[3];else local v247=v80[2];local v248={v78[v247](v78[v247 + 1 ])};local v249=0;for v340=v247,v80[4] do local v341=0;while true do if (v341==0) then v249=v249 + 1 ;v78[v340]=v248[v249];break;end end end end elseif (v81>88) then local v250=0;local v251;local v252;while true do if (v250==0) then v251=v80[2];v252=v78[v251];v250=1;end if (v250==1) then for v417=v251 + 1 ,v80[3] do v7(v252,v78[v417]);end break;end end else local v253=v80[2];v78[v253](v13(v78,v253 + 1 ,v80[3]));end elseif (v81<=104) then if (v81<=96) then if (v81<=92) then if (v81<=90) then v78[v80[2]]=v80[3]~=0 ;elseif (v81==91) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]] * v78[v80[4]] ;end elseif (v81<=94) then if (v81>93) then local v255=v80[2];local v256={};for v342=1, #v77 do local v343=0;local v344;while true do if (v343==0) then v344=v77[v342];for v434=0, #v344 do local v435=v344[v434];local v436=v435[1];local v437=v435[2];if ((v436==v78) and (v437>=v255)) then v256[v437]=v436[v437];v435[1]=v256;end end break;end end end elseif (v78[v80[2]]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81==95) then v78[v80[2]]=v63[v80[3]];else v78[v80[2]]=v80[3]^v78[v80[4]] ;end elseif (v81<=100) then if (v81<=98) then if (v81==97) then local v260=v80[2];local v261,v262=v71(v78[v260](v78[v260 + 1 ]));v73=(v262 + v260) -1 ;local v263=0;for v345=v260,v73 do local v346=0;while true do if (v346==0) then v263=v263 + 1 ;v78[v345]=v261[v263];break;end end end else local v264=0;local v265;local v266;local v267;while true do if (v264==1) then v267=0;for v421=v265,v80[4] do local v422=0;while true do if (v422==0) then v267=v267 + 1 ;v78[v421]=v266[v267];break;end end end break;end if (v264==0) then v265=v80[2];v266={v78[v265](v13(v78,v265 + 1 ,v73))};v264=1;end end end elseif (v81>99) then v72=v80[3];else local v269=v80[2];local v270=v78[v80[3]];v78[v269 + 1 ]=v270;v78[v269]=v270[v80[4]];end elseif (v81<=102) then if (v81>101) then v64[v80[3]]=v78[v80[2]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>103) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]= #v78[v80[3]];end elseif (v81<=112) then if (v81<=108) then if (v81<=106) then if (v81==105) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81>107) then v78[v80[2]]={};else local v282=0;local v283;while true do if (v282==0) then v283=v80[2];do return v13(v78,v283,v73);end break;end end end elseif (v81<=110) then if (v81>109) then local v284=v80[2];v78[v284](v78[v284 + 1 ]);elseif (v80[2]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>111) then local v285=v80[2];local v286=v78[v285];local v287=v80[3];for v347=1,v287 do v286[v347]=v78[v285 + v347 ];end else local v288=0;local v289;while true do if (v288==0) then v289=v80[2];v78[v289](v13(v78,v289 + 1 ,v73));break;end end end elseif (v81<=116) then if (v81<=114) then if (v81>113) then if (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v29(v69[v80[3]],nil,v64);end elseif (v81>115) then v78[v80[2]][v80[3]]=v80[4];elseif (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=118) then if (v81==117) then if (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else local v293=v78[v80[4]];if  not v293 then v72=v72 + 1 ;else local v374=0;while true do if (v374==0) then v78[v80[2]]=v293;v72=v80[3];break;end end end end elseif (v81>119) then local v294=0;local v295;while true do if (v294==0) then v295=v80[2];v78[v295]=v78[v295](v78[v295 + 1 ]);break;end end else v78[v80[2]]=v80[3];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);